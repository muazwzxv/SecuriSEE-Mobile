{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\hackathon\\\\Oracle-Hackathon-Mobile\\\\screens\\\\MainScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport deviceStorage from \"../services/deviceStorage\";\nimport Loading from \"../components/Loading\";\nimport Auth from \"./Auth\";\nimport Registration from \"./RegisterScreeen\";\nimport Login from \"./LoginScreen\";\nimport Home from \"./user/HomeScreen\";\nimport Container from \"./user/UserContainer\";\nexport default function MainScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      jwt = _useState2[0],\n      setJwt = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var getData = function getData() {\n    var value;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('id_token'));\n\n          case 3:\n            value = _context.sent;\n\n            if (value !== null) {\n              setJwt(value);\n              setLoading(false);\n            } else {\n              setLoading(false);\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var newJWT = function newJWT(JWT) {\n    setJwt(JWT);\n    setLoading(false);\n  };\n\n  var loadHandler = function loadHandler(bool) {\n    setLoading(bool);\n  };\n\n  var logout = function logout() {\n    deviceStorage.delJwt();\n    setJwt('');\n    setLoading(false);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  if (loading) {\n    return React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }\n    });\n  } else if (!jwt) {\n    return React.createElement(Login, {\n      newJWT: newJWT,\n      loadHandler: loadHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }\n    });\n  } else if (jwt) {\n    return React.createElement(Container, {\n      logout: logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  }\n});","map":{"version":3,"sources":["D:/hackathon/Oracle-Hackathon-Mobile/screens/MainScreen.js"],"names":["StatusBar","React","useEffect","useState","AsyncStorage","deviceStorage","Loading","Auth","Registration","Login","Home","Container","MainScreen","navigation","jwt","setJwt","loading","setLoading","getData","getItem","value","alert","newJWT","JWT","loadHandler","bool","logout","delJwt","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","row","flexDirection","flexWrap"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AAGA,OAAOC,aAAP;AACA,OAAOC,OAAP;AACA,OAAOC,IAAP;AACA,OAAOC,YAAP;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,OAAOC,SAAP;AAEA,eAAe,SAASC,UAAT,OAAoC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAEjD,kBAAqBV,QAAQ,CAAC,EAAD,CAA7B;AAAA;AAAA,MAAOW,GAAP;AAAA,MAAWC,MAAX;;AACA,mBAA6BZ,QAAQ,CAAC,IAAD,CAArC;AAAA;AAAA,MAAOa,OAAP;AAAA,MAAeC,UAAf;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEQd,YAAY,CAACe,OAAb,CAAqB,UAArB,CAFR;;AAAA;AAENC,YAAAA,KAFM;;AAIZ,gBAAGA,KAAK,KAAK,IAAb,EAAmB;AACjBL,cAAAA,MAAM,CAACK,KAAD,CAAN;AACAH,cAAAA,UAAU,CAAC,KAAD,CAAV;AACD,aAHD,MAGM;AACJA,cAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AATW;AAAA;;AAAA;AAAA;AAAA;AAWZI,YAAAA,KAAK,aAAL;;AAXY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAeA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,GAAD,EAAS;AACtBR,IAAAA,MAAM,CAACQ,GAAD,CAAN;AACAN,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD;;AAKA,MAAMO,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AAC5BR,IAAAA,UAAU,CAACQ,IAAD,CAAV;AACD,GAFD;;AAIA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBrB,IAAAA,aAAa,CAACsB,MAAd;AACAZ,IAAAA,MAAM,CAAC,EAAD,CAAN;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAJD;;AAMAf,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,OAAO;AACR,GAFQ,EAEP,EAFO,CAAT;;AAIA,MAAGF,OAAH,EAAY;AACV,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO,IAAG,CAACF,GAAJ,EAAS;AACd,WAAO,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEQ,MAAf;AAAuB,MAAA,WAAW,EAAEE,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFM,MAEA,IAAGV,GAAH,EAAO;AACZ,WAAO,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAEY,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF;AAED,IAAME,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,aAAa,EAAE,KADZ;AAEHC,IAAAA,QAAQ,EAAE;AAFP;AAP0B,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, Button, BackHandler } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n//import components\r\nimport deviceStorage from '../services/deviceStorage';\r\nimport Loading from '../components/Loading';\r\nimport Auth from './Auth';\r\nimport Registration from './RegisterScreeen';\r\nimport Login from './LoginScreen';\r\nimport Home from './user/HomeScreen';\r\nimport Container from './user/UserContainer';\r\n\r\nexport default function MainScreen({ navigation }) {\r\n\r\n  const [jwt,setJwt] = useState('');\r\n  const [loading,setLoading] = useState(true);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const value = await AsyncStorage.getItem('id_token');\r\n\r\n      if(value !== null) {\r\n        setJwt(value);\r\n        setLoading(false);\r\n      }else {\r\n        setLoading(false);\r\n      }\r\n    }catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  const newJWT = (JWT) => {\r\n    setJwt(JWT);\r\n    setLoading(false);\r\n  }\r\n\r\n  const loadHandler = (bool) => {\r\n    setLoading(bool);\r\n  }\r\n\r\n  const logout = () => {\r\n    deviceStorage.delJwt()\r\n    setJwt('');\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  },[]);\r\n  \r\n  if(loading) {\r\n    return(<Loading/>);\r\n  } else if(!jwt) {\r\n    return(<Login newJWT={newJWT} loadHandler={loadHandler}/>);\r\n  } else if(jwt){\r\n    return(<Container logout={logout}/>);\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}