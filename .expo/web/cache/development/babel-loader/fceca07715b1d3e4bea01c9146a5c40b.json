{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\hackathon\\\\Oracle-Hackathon-Mobile\\\\screens\\\\LoginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { ImageBackgroundBase } from \"react-native-web/dist/index\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useNavigation } from '@react-navigation/native';\nimport axios from 'axios';\nimport deviceStorage from \"../services/deviceStorage\";\nexport default function LoginScreen(props) {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      IC = _useState2[0],\n      setIC = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwords = _useState4[0],\n      setPassword = _useState4[1];\n\n  var loginUser = function loginUser() {\n    var data;\n    return _regeneratorRuntime.async(function loginUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            props.loadHandler(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios({\n              method: 'post',\n              url: 'http://138.3.215.26:80/api/login',\n              data: {\n                ic: IC,\n                password: passwords\n              }\n            }).then(function (response) {\n              deviceStorage.saveItem('id_token', response.data.Token);\n              props.newJWT(response.data.Token);\n            }).catch(function (err) {\n              Alert.alert('Login Error', err.response.data.Message);\n              props.loadHandler(false);\n            }));\n\n          case 4:\n            data = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"../assets/bglogin.jpg\"),\n    style: {\n      height: Dimensions.get('window').height / 2.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"SecuriSEE\")), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Login Page \"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"IC number\",\n    onChangeText: function onChangeText(text) {\n      setIC(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'blue'\n    },\n    onPress: function onPress() {\n      navigation.navigate('Register');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Don't have an account Register\")), React.createElement(Button, {\n    title: \"Login\",\n    onPress: loginUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: 'space-between'\n  },\n  input: {\n    borderColor: 'gray',\n    borderWidth: 1,\n    height: 40,\n    width: 200,\n    textAlign: 'center'\n  },\n  title: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: '#fff',\n    fontSize: 40,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["D:/hackathon/Oracle-Hackathon-Mobile/screens/LoginScreen.js"],"names":["StatusBar","React","useState","ImageBackgroundBase","useNavigation","axios","deviceStorage","LoginScreen","props","navigation","IC","setIC","passwords","setPassword","loginUser","loadHandler","method","url","data","ic","password","then","response","saveItem","Token","newJWT","catch","err","Alert","alert","Message","styles","container","require","height","Dimensions","get","title","input","text","row","color","navigate","StyleSheet","create","flex","backgroundColor","justifyContent","flexDirection","flexWrap","borderColor","borderWidth","width","textAlign","alignItems","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Button, Alert, ImageBackgroundBase, ImageBackground, Dimensions, ScrollView } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport axios from 'axios';\r\n\r\n//import components \r\nimport deviceStorage from '../services/deviceStorage';\r\n\r\nexport default function LoginScreen(props) {\r\n  const navigation = useNavigation();\r\n\r\n  //set the state\r\n  const [IC,setIC] = useState('');\r\n  const [passwords,setPassword] = useState('');\r\n\r\n  //login user\r\n  const loginUser = async () => {\r\n    try {\r\n      props.loadHandler(true);\r\n      const data = await axios({\r\n        method: 'post',\r\n        url: 'http://138.3.215.26:80/api/login',\r\n        data: {\r\n          ic: IC,\r\n          password: passwords\r\n        }\r\n      })\r\n      .then((response) => {\r\n        deviceStorage.saveItem('id_token', response.data.Token);\r\n        props.newJWT(response.data.Token);\r\n      })\r\n      .catch((err) => {\r\n        Alert.alert('Login Error', err.response.data.Message);\r\n        props.loadHandler(false);\r\n      })\r\n    }catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      \r\n      {/*Top*/}\r\n      <ImageBackground\r\n        source={require('../assets/bglogin.jpg')}\r\n        style={{\r\n          height: Dimensions.get('window').height / 2.5, \r\n        }}>\r\n\r\n        <Text style={styles.title}>SecuriSEE</Text>\r\n      </ImageBackground>\r\n\r\n      {/*Bottom*/} \r\n      <Text>Login Page </Text>\r\n      <View>\r\n        <TextInput \r\n          style={styles.input} \r\n          placeholder=\"IC number\" \r\n          onChangeText={(text) => {setIC(text)}}\r\n        />\r\n      </View>\r\n      <View>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Password\" \r\n          secureTextEntry={true} \r\n          onChangeText={(text) => {setPassword(text)}}\r\n        />\r\n      </View>\r\n      <View style={styles.row}>\r\n        <Text style={{color: 'blue'}} onPress={() => {navigation.navigate('Register')}}>Don't have an account Register</Text>\r\n      </View>\r\n      <Button title=\"Login\" onPress={loginUser}></Button>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    //alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  \r\n  row: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: 'space-between',\r\n  },\r\n\r\n  input: {\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    height: 40,\r\n    width: 200,\r\n    textAlign: 'center'\r\n  },\r\n\r\n  title: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: '#fff',\r\n    fontSize: 40,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}